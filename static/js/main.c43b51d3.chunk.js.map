{"version":3,"sources":["components/TextNode.js","components/OptionList.js","components/TreeView.js","App.js","index.js"],"names":["TextNode","this","props","isMaxNew","myRef","current","focus","_this$props","classes","selected","label","onChange","handleTextChange","handleAddSub","handleDelete","handleReturn","nodeCount","react_default","a","createElement","className","nodeContainer","Badge","badgeContent","color","anchorOrigin","vertical","horizontal","Checkbox","checked","checkbox","size","TextField","nodeText","InputProps","disableUnderline","style","padding","value","onKeyPress","inputRef","multiline","IconButton","onClick","AddCircle_default","addButton","HighlightOff_default","deleteButton","React","Component","withStyles","theme","optionList","margin","borderLeft","display","width","borderBottom","fontSize","justifyContent","alignItems","height","OptionList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isLastNew","textInput","_this2","options","textChange","i","length","push","createRef","handleSubOptionsTextChange","optionId","subOptions","id","uuidv4","Math","random","toString","substring","Date","now","handleAdd","index","newOption","name","depth","splice","getNodeCount","optionCount","Fragment","map","option","key","concat","paddingLeft","components_TextNode","handleCheckboxClicked","event","newValue","handleChange","target","newSubOption","window","confirm","e","preventDefault","undefined","setState","count","styles","treeContainer","maxWidth","TreeView","listName","selectedFile","isLoading","anchorEl","setAnchorEl","lastSaved","componentDidMount","getServerData","search","location","listId","URLSearchParams","get","axios","then","res","data","list","createBaseNode","saveData","handleClose","currentDT","post","alert","newId","_id","document","href","click","getLSData","retrievedStorage","localStorage","getItem","setItem","JSON","stringify","parse","downloadFile","content","fileName","contentType","file","Blob","type","URL","createObjectURL","download","writeToLS","newData","exportJSON","getFile","files","reader","FileReader","readAsText","onload","result","createNew","handleMenu","currentTarget","handleTitleChange","AppBar","position","Toolbar","edge","Menu_default","Menu","getContentAnchorEl","keepMounted","transformOrigin","open","onClose","accept","htmlFor","MenuItem","Typography","variant","flexGrow","Search_default","MoreVert_default","fontStyle","marginTop","marginBottom","components_OptionList","createMuiTheme","palette","primary","blue","typography","overrides","MuiBadge","badge","minWidth","colorPrimary","backgroundColor","App","ThemeProvider","components_TreeView","ReactDOM","render","src_App","getElementById"],"mappings":"0PA8CMA,+LAEyB,IAAxBC,KAAKC,MAAMC,UACZF,KAAKC,MAAME,MAAMC,QAAQC,yCAGrB,IAAAC,EAeFN,KAAKC,MAbPM,EAFID,EAEJC,QACAC,EAHIF,EAGJE,SACAC,EAJIH,EAIJG,MACAC,EALIJ,EAKJI,SACAC,EANIL,EAMJK,iBACAC,EAPIN,EAOJM,aACAC,EARIP,EAQJO,aACAC,EATIR,EASJQ,aACAC,EAVIT,EAUJS,UACAZ,EAXIG,EAWJH,MAKF,OACEa,EAAAC,EAAAC,cAAA,OAAKC,UAAWZ,EAAQa,eACtBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEC,aAAcP,EACdQ,MAAM,UACNC,aAAc,CACZC,SAAU,MACVC,WAAY,SAGdV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,QAASpB,EACTW,UAAWZ,EAAQsB,SACnBnB,SAAUA,EACVa,MAAM,UACNO,KAAK,WAGTd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEZ,UAAWZ,EAAQyB,SACnBC,WAAY,CACVC,kBAAkB,EAClBC,MAAO,CACLC,QAAS,IAGbC,MAAO5B,EACPC,SAAUC,EACV2B,WAAYxB,EACZyB,SAAUpC,EACVqC,WAAS,IAcXxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEC,QAAS9B,EACTkB,KAAK,SAELd,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CACEE,UAAWZ,EAAQqC,aAGvB5B,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEC,QAAS7B,EACTiB,KAAK,SAELd,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,CACEE,UAAWZ,EAAQuC,wBA/ERC,IAAMC,WAuFdC,cA5HA,SAACC,GAAD,MAAY,CACzBC,WAAW,CACTC,OAAQ,GAEVhC,cAAc,CACZiC,WAAY,kBACZC,QAAQ,QAEVtB,SAAS,CACPuB,MAAM,QACNC,aAAc,mBAEhBZ,UAAU,CACRa,SAAU,OACVlC,MAAO,SAETuB,aAAa,CACXW,SAAU,OACVlC,MAAO,OAETR,UAAU,CACR2C,eAAgB,SAChBC,WAAY,UAEd9B,SAAS,CACP+B,OAAQ,EACRL,MAAO,SAkGIN,CAAmBlD,GCkDnB8D,cAnLb,SAAAA,EAAY5D,GAAO,IAAA6D,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/D,KAAA6D,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAA/D,KAAA+D,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAnE,KAAMC,KAIRmE,MAAQ,CACNC,WAAY,GAJZP,EAAKQ,UAAY,GAFAR,wEASX,IAAAS,EAAAvE,KAAAM,EAC0BN,KAAKC,MAA7BuE,EADFlE,EACEkE,QAASC,EADXnE,EACWmE,WAEjBzE,KAAKsE,UAAY,GAEjB,IAAI,IAAII,EAAE,EAAGA,EAAEF,EAAQG,OAAQD,IAC7B1E,KAAKsE,UAAUM,KAAK7B,IAAM8B,aAE5B,IAmBMC,EAA6B,SAACC,EAAUC,GAC5C,IAAI,IAAIN,EAAE,EAAEA,EAAEF,EAAQG,OAAOD,IACxBF,EAAQE,GAAGO,KAAOF,IACnBP,EAAQE,GAAGM,WAAaA,GAG5BP,EAAWD,IAGPU,EAAS,WACb,OAAOC,KAAKC,SAASC,SAAS,IAAIC,UAAU,GAAKC,KAAKC,MAAMH,SAAS,KAGjEI,EAAY,SAACC,GACjB,IAAMC,EAAY,CAChBC,KAAK,GACLX,GAAIC,IACJF,WAAY,GACZxE,UAAU,EACVqF,MAAOrB,EAAQkB,GAAOG,OAGxBrB,EAAQsB,OAAOJ,EAAM,EAAG,EAAGC,GAC3BlB,EAAWD,IAwDPuB,EAAe,SAAChB,GAEpB,IADA,IAAIiB,EAAc,EACVtB,EAAE,EAAEA,EAAEF,EAAQG,OAAOD,IACxBF,EAAQE,GAAGO,KAAOF,IACnBiB,EAAcxB,EAAQE,GAAGM,WAAWL,QAGxC,OAAOqB,GAeT,OACEhF,EAAAC,EAAAC,cAACF,EAAAC,EAAMgF,SAAP,KACCzB,EAAQ0B,IAAI,SAACC,EAAQT,GACpB,OACA1E,EAAAC,EAAAC,cAAA,MACEkF,IAAK,CAACD,EAAOlB,GAAIS,GAAOW,SACxBlE,MAAO,CACPiB,OAAQ,EACRkD,YAA8B,IAAjBH,EAAON,MAAc,EAAI,OACtCxC,WAA6B,IAAjB8C,EAAON,MAAa,OAAQ,oBAExC7E,EAAAC,EAAAC,cAACqF,EAAD,CACE/F,SAAU2F,EAAO3F,SACjBC,MAAO0F,EAAOP,KACdlF,SAAU,kBAtIY,SAACqE,GAC7B,IAAI,IAAIL,EAAE,EAAEA,EAAEF,EAAQG,OAAOD,IACxBF,EAAQE,GAAGO,KAAOF,IACnBP,EAAQE,GAAGlE,UAAYgE,EAAQE,GAAGlE,UAGtCiE,EAAWD,GAgIWgC,CAAsBL,EAAOlB,KAC7CtE,iBAAkB,SAAC8F,GAAD,OA9HL,SAACC,EAAU3B,GAE9B,IAAI,IAAIL,EAAE,EAAEA,EAAEF,EAAQG,OAAOD,IACxBF,EAAQE,GAAGO,KAAOF,IACnBP,EAAQE,GAAGkB,KAAOc,GAGtBjC,EAAWD,GAuHwBmC,CAAaF,EAAMG,OAAOvE,MAAO8D,EAAOlB,KACrEQ,UAAW,kBAAMA,EAAUC,IAC3B9E,aAAc,kBA5FD,SAACmE,GAQpB,IAPA,IAAM8B,EAAe,CACnBjB,KAAK,GACLX,GAAIC,IACJF,WAAY,GACZxE,UAAU,GAGJkE,EAAE,EAAEA,EAAEF,EAAQG,OAAOD,IACxBF,EAAQE,GAAGO,KAAOF,IACnB8B,EAAahB,MAAQrB,EAAQE,GAAGmB,MAAQ,EACxCrB,EAAQE,GAAGM,WAAWJ,KAAKiC,GAC3BrC,EAAQE,GAAGlE,UAAW,GAG1BiE,EAAWD,GA6Ee5D,CAAauF,EAAOlB,KACxCpE,aAAc,WAAWiG,OAAOC,QAAP,oCAAAV,OAAmDF,EAAOP,KAA1D,QA3EZ,SAACb,GACpB,IAAI,IAAIL,EAAE,EAAEA,EAAEF,EAAQG,OAAOD,IACxBF,EAAQE,GAAGO,KAAOF,GACnBP,EAAQsB,OAAOpB,EAAG,GAGtBD,EAAWD,GAqEyF3D,CAAasF,EAAOlB,KAClHnE,aAAc,SAACkG,GAAD,OAnED,SAACA,EAAGtB,GACV,UAAVsB,EAAEZ,MACHY,EAAEC,iBACFxB,EAAUC,QACmBwB,IAA5B3C,EAAKD,UAAUoB,EAAM,IACtBnB,EAAK4C,SAAS,CACZ9C,WAAW,IAEbE,EAAKD,UAAUoB,EAAM,GAAGtF,QAAQC,SAEhCkE,EAAK4C,SAAS,CACZ9C,WAAW,KAwDYvD,CAAakG,EAAGtB,IACrCvF,MAAOoE,EAAKD,UAAUoB,GACtBxF,SAAUqE,EAAKH,MAAMC,UACrBtD,UAAWgF,EAAaI,EAAOlB,IAC/BmC,MAAOjB,EAAOiB,QAKdjB,EAAOnB,WAAWL,OAAS,IAAyB,IAApBwB,EAAO3F,UACvCQ,EAAAC,EAAAC,cAAC2C,EAAD,CACEW,QAAS2B,EAAOnB,WAChBP,WAAY,SAACO,GAAD,OAAgBF,EAA2BqB,EAAOlB,GAAID,iBAzKvDjC,IAAMC,4HCYzBqE,EAAS,CACbC,cAAe,CACbC,SAAU,UAqTCC,6MAhTbpD,MAAQ,CACNqD,SAAU,YACVjD,QAAS,GACTkD,aAAc,KACdC,WAAW,EACXC,SAAU,KACVC,aAAa,EACbC,UAAW,QAGbC,kBAAoB,WAClBjE,EAAKkE,mBASPA,cAAgB,WACd,IAAIC,EAASnB,OAAOoB,SAASD,OAEzBE,EADS,IAAIC,gBAAgBH,GACbI,IAAI,cAEVnB,IAAXiB,GAAmC,OAAXA,EACzBrE,EAAKqD,SAAS,CACZQ,WAAW,GACX,WACAW,IACCD,IADD,sDAAAhC,OAC2D8B,IAC1DI,KAAK,SAAAC,GAAG,OAAI1E,EAAKqD,SAAS,CACzBM,SAAUe,EAAIC,KAAKhB,SACnBjD,QAASgE,EAAIC,KAAKC,KAClBZ,UAAWU,EAAIC,KAAKX,UACpBH,WAAW,QAKf7D,EAAK6E,oBAITC,SAAW,WACT9E,EAAK+E,cACL,IAAIZ,EAASnB,OAAOoB,SAASD,OAEzBE,EADS,IAAIC,gBAAgBH,GACbI,IAAI,SAClBS,EAAY,IAAIvD,KAER,OAAX4C,EACDG,IACCS,KADD,yDACgE,CAC9DL,KAAM5E,EAAKM,MAAMsE,KACjBjB,SAAU3D,EAAKM,MAAMqD,SACrBK,UAAW,IAAIvC,OAEhBgD,KAAK,SAACC,GAEL,OADAQ,MAAM,qBACCR,IAERD,KAAK,SAACC,GACL,IAAMS,EAAQT,EAAIC,KAAKS,IACjBjI,EAAIkI,SAASjI,cAAc,KACjCD,EAAEmI,KAAF,qDAAA/C,OAA8D4C,GAC9DhI,EAAEoI,UAGJf,IACCS,KADD,6DAAA1C,OACmE8B,GAAU,CAC3EO,KAAM5E,EAAKM,MAAMI,QACjBiD,SAAU3D,EAAKM,MAAMqD,SACrBK,UAAWgB,IAEZP,KAAK,WACJzE,EAAKqD,SAAS,CACZW,UAAWgB,IAEbE,MAAM,iCAKZM,UAAY,WACV,IAAMC,EAAmBC,aAAaC,QAAQ,cAa9C,OAZwB,OAArBF,GAA6BA,IAAqB,IACnDC,aAAaE,QAAQ,aAAcC,KAAKC,UAAU,CAChD,CACIhE,KAAM,aACNX,GAAI,EACJzE,UAAU,EACVwE,WAAY,GACZa,MAAO,MAKP8D,KAAKE,MAAML,aAAaC,QAAQ,kBAG1CK,aAAe,SAACC,EAASC,EAAUC,GACjC,IAAMhJ,EAAIkI,SAASjI,cAAc,KAC3BgJ,EAAO,IAAIC,KAAK,CAACJ,GAAU,CAAEK,KAAMH,IACzChJ,EAAEmI,KAAOiB,IAAIC,gBAAgBJ,GAC7BjJ,EAAEsJ,SAAWP,EACb/I,EAAEoI,WAGJmB,UAAY,SAACC,GACXjB,aAAaE,QAAQ,aAAcC,KAAKC,UAAUa,OAGpDC,WAAa,WACX5G,EAAK+E,cACL/E,EAAKgG,aAAaH,KAAKC,UAAU9F,EAAKM,MAAMI,SAAU,YAAa,iBAGrEmG,QAAU,SAAC3D,GACTlD,EAAK+E,cACL,IAAI+B,EAAQ5D,EAAEJ,OAAOgE,MACjBC,EAAS,IAAIC,WACjBD,EAAOE,WAAWH,EAAM,IAExBC,EAAOG,OAAS,SAAAhE,GACdwC,aAAaE,QAAQ,aAAc1C,EAAEJ,OAAOqE,QAC5CnH,EAAKqD,SAAS,CACZ3C,QAASmF,KAAKE,MAAM7C,EAAEJ,OAAOqE,cAKnCC,UAAY,WACVpH,EAAK+E,cAULP,IACCS,KADD,yDACgE,CAC9DL,KAVF,CAAC,CACC9C,KAAM,aACNX,GAAI,EACJzE,UAAU,EACVwE,WAAY,GACZa,MAAO,IAMP4B,SAAU3D,EAAKM,MAAMqD,SACrBK,UAAW,IAAIvC,OAEhBgD,KAAK,SAACC,GAEL,OADAQ,MAAM,qBACCR,IAERD,KAAK,SAACC,GACL,IAAMS,EAAQT,EAAIC,KAAKS,IAEjBjI,EAAIkI,SAASjI,cAAc,KACjCD,EAAEmI,KAAF,qDAAA/C,OAA8D4C,GAC9DhI,EAAEoI,aAINV,eAAiB,WACf7E,EAAK+E,cAWL/E,EAAKqD,SAAS,CACZ3C,QAVF,CAAC,CACCoB,KAAM,aACNX,GAAI,EACJzE,UAAU,EACVwE,WAAY,GACZa,MAAO,SASXsF,WAAa,SAAA1E,GACX3C,EAAKqD,SAAS,CACZS,SAAUnB,EAAM2E,cAChBvD,aAAa,OAIjBgB,YAAc,WACZ/E,EAAKqD,SAAS,CACZU,aAAa,OAIjBwD,kBAAoB,SAACrE,GACnBlD,EAAKqD,SAAS,CACZM,SAAUT,EAAEJ,OAAOvE,iFAId,IAAAkC,EAAAvE,KAMN,OACEgB,EAAAC,EAAAC,cAACF,EAAAC,EAAMgF,SAAP,KACCjF,EAAAC,EAAAC,cAACoK,EAAA,EAAD,CACEC,SAAS,QACThK,MAAM,WACJP,EAAAC,EAAAC,cAACsK,EAAA,EAAD,KACExK,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEgJ,KAAK,QACLlK,MAAM,UACNmB,QAAS1C,KAAKmL,YAEdnK,EAAAC,EAAAC,cAACwK,EAAAzK,EAAD,OAEFD,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CACI1G,GAAG,cACH2C,SAAU5H,KAAKoE,MAAMwD,SACrBgE,mBAAoB,KACpBpK,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdmK,aAAW,EACXC,gBAAiB,CACfrK,SAAU,MACVC,WAAY,UAEdqK,KAAM/L,KAAKoE,MAAMyD,YACjBmE,QAAShM,KAAK6I,aAEd7H,EAAAC,EAAAC,cAAA,SACEkJ,KAAK,OACLjI,MAAO,CAAEmB,QAAS,QAClB2B,GAAG,qBACHW,KAAK,OACLlF,SAAUV,KAAK2K,QACfsB,OAAO,UAETjL,EAAAC,EAAAC,cAAA,SAAOgL,QAAQ,sBACblL,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CAAUzJ,QAAS,kBAAM6B,EAAKoG,YAA9B,gBAEF3J,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CAAUzJ,QAAS,kBAAM6B,EAAKmG,eAA9B,eACA1J,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CAAUzJ,QAAS,kBAAM6B,EAAKqE,aAA9B,aACA5H,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CAAUzJ,QAAS,kBAAM6B,EAAK2G,cAA9B,eAEJlK,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAAYC,QAAQ,MAApB,YAGArL,EAAAC,EAAAC,cAAA,OAAKiB,MAAO,CAACmK,SAAU,KACvBtL,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAYlB,MAAM,WAChBP,EAAAC,EAAAC,cAACqL,EAAAtL,EAAD,OAEFD,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAYgJ,KAAK,MAAMlK,MAAM,WAC3BP,EAAAC,EAAAC,cAACsL,EAAAvL,EAAD,SAIND,EAAAC,EAAAC,cAACsK,EAAA,EAAD,MAYAxK,EAAAC,EAAAC,cAAA,OACEiB,MAAO,CACLsK,UAAU,SACVlL,MAAM,SAEoB,OAAzBvB,KAAKoE,MAAM0D,UAAqB,YAAc,eAAiB9H,KAAKoE,MAAM0D,WAE/E9G,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACAE,WAAY,CACVC,kBAAkB,EAClBC,MAAO,CACLmB,QAAS,QACTG,SAAU,MACViJ,UAAW,QACXC,aAAc,UAIlBtK,MAAOrC,KAAKoE,MAAMqD,SAClB/G,SAAUV,KAAKqL,oBAEfrK,EAAAC,EAAAC,cAAA,OAAKiB,MAAOkF,EAAOC,eACjBtG,EAAAC,EAAAC,cAAC0L,EAAD,CACIpI,QAASxE,KAAKoE,MAAMI,QACpBC,WAAY,SAACD,GAAD,OAAaD,EAAK4C,SAAS,CAAC3C,wBAzSjCzB,IAAMC,qCCfvBE,EAAQ2J,YAAe,CAC3BC,QAAS,CACPC,QAASC,KAEXC,WAAY,GAGZC,UAAW,CACTC,SAAU,CACRC,MAAO,CACLxJ,OAAQ,GACRyJ,SAAU,GACVjL,QAAS,GAGXkL,aAAc,CACZC,gBAAiB,YAmBVC,6MAXbpJ,MAAQ,CAAEgD,MAAO,2EAGf,OACEpG,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CAAevK,MAAOA,GAClBlC,EAAAC,EAAAC,cAACwM,EAAD,cAPQ1K,aCxBlB2K,IAASC,OAAO5M,EAAAC,EAAAC,cAAC2M,EAAD,MAAS1E,SAAS2E,eAAe","file":"static/js/main.c43b51d3.chunk.js","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n  optionList:{\r\n    margin: 0,\r\n  },\r\n  nodeContainer:{\r\n    borderLeft: '1px dashed #ccc',\r\n    display:'flex',\r\n  },\r\n  nodeText:{\r\n    width:'700px',\r\n    borderBottom: '1px dashed #ccc'\r\n  },\r\n  addButton:{\r\n    fontSize: '17px',\r\n    color: 'green'\r\n  },\r\n  deleteButton:{\r\n    fontSize: '17px',\r\n    color: 'red',\r\n  },\r\n  nodeCount:{\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  checkbox:{\r\n    height: 0,\r\n    width: '5px'\r\n  },\r\n  // valueCount:{\r\n  //   justifyContent: 'center',\r\n  //   alignItems: 'center',\r\n  //   border: '1px solid #ccc',\r\n  //   width:'50px',\r\n  //   height: '20px'\r\n  // }\r\n});\r\n\r\nclass TextNode extends React.Component {\r\n  componentDidMount(){\r\n    if(this.props.isMaxNew === true){\r\n      this.props.myRef.current.focus()\r\n    }\r\n  }\r\n  render(){\r\n    const {\r\n      classes,    \r\n      selected, \r\n      label, \r\n      onChange, \r\n      handleTextChange,\r\n      handleAddSub, \r\n      handleDelete,\r\n      handleReturn,\r\n      nodeCount,\r\n      myRef,\r\n      // count,\r\n      // handleCountChange,\r\n      // subCount\r\n    } = this.props;\r\n    return(\r\n      <div className={classes.nodeContainer}>\r\n        <Badge\r\n          badgeContent={nodeCount}\r\n          color='primary'\r\n          anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n          }}\r\n          >\r\n          <Checkbox\r\n            checked={selected}\r\n            className={classes.checkbox}\r\n            onChange={onChange}\r\n            color=\"primary\"\r\n            size='small'\r\n          />\r\n        </Badge>\r\n        <TextField\r\n          className={classes.nodeText}\r\n          InputProps={{\r\n            disableUnderline: true,\r\n            style: {\r\n              padding: 0,\r\n            }\r\n          }}\r\n          value={label}\r\n          onChange={handleTextChange}\r\n          onKeyPress={handleReturn}\r\n          inputRef={myRef}\r\n          multiline\r\n        />\r\n        {/* <TextField\r\n          className={classes.valueCount}\r\n          InputProps={{\r\n            disableUnderline: true,\r\n            style: {\r\n              padding: 0,\r\n            }\r\n          }}\r\n          onChange={handleCountChange}\r\n          value={subCount === 0 ? count : subCount}\r\n          disabled={subCount === 0 ? false: true}\r\n        /> */}\r\n        <IconButton\r\n          onClick={handleAddSub}\r\n          size='small'\r\n        >\r\n          <AddCircleIcon\r\n            className={classes.addButton}\r\n          />\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleDelete} \r\n          size='small'\r\n        >\r\n          <HighlightOffIcon\r\n            className={classes.deleteButton}\r\n          />\r\n        </IconButton>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TextNode)","import React from 'react';\r\nimport TextNode from './TextNode';\r\n\r\nclass OptionList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.textInput = []\r\n  }\r\n\r\n  state = {\r\n    isLastNew : false,\r\n  }\r\n\r\n  render(){\r\n    const { options, textChange } = this.props;\r\n\r\n    this.textInput = [];\r\n\r\n    for(let i=0; i<options.length; i++){\r\n      this.textInput.push(React.createRef());\r\n    }\r\n    const handleCheckboxClicked = (optionId) => {\r\n      for(let i=0;i<options.length;i++){\r\n        if(options[i].id === optionId){\r\n          options[i].selected = !options[i].selected\r\n        }\r\n      }\r\n      textChange(options);\r\n    }\r\n    \r\n    const handleChange = (newValue, optionId) => {\r\n      ('handle Change triggered')\r\n      for(let i=0;i<options.length;i++){\r\n        if(options[i].id === optionId){\r\n          options[i].name = newValue\r\n        }\r\n      }\r\n      textChange(options);\r\n    }\r\n  \r\n    const handleSubOptionsTextChange = (optionId, subOptions) => {\r\n      for(let i=0;i<options.length;i++){\r\n        if(options[i].id === optionId){\r\n          options[i].subOptions = subOptions\r\n        }\r\n      }\r\n      textChange(options);\r\n    }\r\n\r\n    const uuidv4 = () => {\r\n      return Math.random().toString(36).substring(2) + Date.now().toString(36);\r\n    }\r\n  \r\n    const handleAdd = (index) => {\r\n      const newOption = {\r\n        name:\"\",\r\n        id: uuidv4(),\r\n        subOptions: [],\r\n        selected: false,\r\n        depth: options[index].depth,\r\n        // count: 0\r\n      }\r\n      options.splice(index+1, 0, newOption )\r\n      textChange(options)\r\n    }\r\n  \r\n    const handleAddSub = (optionId) => {\r\n      const newSubOption = {\r\n        name:\"\",\r\n        id: uuidv4(),\r\n        subOptions: [],\r\n        selected: false,\r\n        // count: 0\r\n      }\r\n      for(let i=0;i<options.length;i++){\r\n        if(options[i].id === optionId){\r\n          newSubOption.depth = options[i].depth + 1\r\n          options[i].subOptions.push(newSubOption)\r\n          options[i].selected = true\r\n        }\r\n      }\r\n      textChange(options)\r\n    }\r\n  \r\n    const handleDelete = (optionId) => {\r\n      for(let i=0;i<options.length;i++){\r\n        if(options[i].id === optionId){\r\n          options.splice(i, 1)\r\n        }\r\n      }\r\n      textChange(options)\r\n    }\r\n  \r\n    const handleReturn = (e, index) => {\r\n      if(e.key === 'Enter'){\r\n        e.preventDefault()\r\n        handleAdd(index);\r\n      if(this.textInput[index+1] !== undefined){\r\n        this.setState({\r\n          isLastNew: false\r\n        })\r\n        this.textInput[index+1].current.focus()\r\n      } else{\r\n        this.setState({\r\n          isLastNew: true\r\n        })\r\n      }\r\n      }\r\n    }\r\n\r\n    const handleCountChange = (newValue, optionId) => {\r\n      for(let i=0;i<options.length;i++){\r\n        if(options[i].id === optionId){\r\n          options[i].count = newValue\r\n        }\r\n      }\r\n      textChange(options);\r\n    }\r\n\r\n    const getNodeCount = (optionId) => {\r\n      let optionCount = 0;\r\n      for(let i=0;i<options.length;i++){\r\n        if(options[i].id === optionId){\r\n          optionCount = options[i].subOptions.length\r\n        }\r\n      }\r\n      return optionCount;\r\n    }\r\n\r\n    // const getSubOptionCount = (optionId) => {\r\n    //   let subCount = 0;\r\n    //   for(let i=0;i<options.length;i++){\r\n    //     if(options[i].id === optionId){\r\n    //       for(let j=0;j<options[i].subOptions.length;j++){\r\n    //         subCount = subCount + parseInt(options[i].subOptions[j].count)\r\n    //       }\r\n    //     }\r\n    //   }\r\n    //   return subCount;\r\n    // }\r\n\r\n    return(\r\n      <React.Fragment>\r\n      {options.map((option, index) => {\r\n        return (\r\n        <ul\r\n          key={[option.id, index].concat()}\r\n          style={{\r\n          margin: 0,\r\n          paddingLeft: option.depth === 0 ? 0 : '20px',\r\n          borderLeft: option.depth === 0 ?'none': '1px #ccc dashed'\r\n          }}>\r\n          <TextNode\r\n            selected={option.selected} \r\n            label={option.name} \r\n            onChange={() => handleCheckboxClicked(option.id)}\r\n            handleTextChange={(event) => handleChange(event.target.value, option.id)}\r\n            handleAdd={() => handleAdd(index)}\r\n            handleAddSub={() => handleAddSub(option.id)}\r\n            handleDelete={() => {if (window.confirm(`Are you sure you want to delete \"${option.name}\"?`)) handleDelete(option.id)}}\r\n            handleReturn={(e) => handleReturn(e, index)}\r\n            myRef={this.textInput[index]}\r\n            isMaxNew={this.state.isLastNew}\r\n            nodeCount={getNodeCount(option.id)}\r\n            count={option.count}\r\n            // handleCountChange={(event) => handleCountChange(event.target.value, option.id)}\r\n            // subCount={getSubOptionCount(option.id)}\r\n           />\r\n          {/* Base Case */}\r\n          {(option.subOptions.length > 0 && option.selected === true) &&\r\n            <OptionList\r\n              options={option.subOptions}\r\n              textChange={(subOptions) => handleSubOptionsTextChange(option.id, subOptions)}\r\n             />\r\n          }\r\n        </ul>\r\n      )}\r\n      )}\r\n    </React.Fragment>\r\n  )\r\n  }\r\n}\r\n\r\nexport default OptionList;","import React from 'react';\nimport OptionList from './OptionList';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n// import Button from '@material-ui/core/Button';\nimport axios from 'axios';\n\nconst styles = {\n  treeContainer: {\n    maxWidth: '700px'\n  },\n}\n\nclass TreeView extends React.Component {    \n  state = {\n    listName: 'List Name',\n    options: [],\n    selectedFile: null,\n    isLoading: false,\n    anchorEl: null,\n    setAnchorEl: false,\n    lastSaved: null,\n  }\n\n  componentDidMount = () => {\n    this.getServerData();\n    // const treeData = this.getLSData();\n    \n    // this.setState({\n    //   options: treeData,\n    //   isLoading: false\n    // })\n  }\n\n  getServerData = () => {\n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    let listId = params.get('query');\n\n    if(listId !== undefined && listId !== null){\n      this.setState({\n        isLoading: true\n      },() => {\n        axios\n        .get(`https://guarded-mesa-76047.herokuapp.com/api/lists/${listId}`)\n        .then(res => this.setState({\n          listName: res.data.listName,\n          options: res.data.list,\n          lastSaved: res.data.lastSaved,\n          isLoading: false\n        }))\n        }\n      )\n    } else {\n      this.createBaseNode()\n    }\n  }\n\n  saveData = () => {\n    this.handleClose();\n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    let listId = params.get('query');\n    const currentDT = new Date();\n\n    if(listId === null){\n      axios\n      .post(`https://guarded-mesa-76047.herokuapp.com/api/lists/new`, {\n        list: this.state.list,\n        listName: this.state.listName,\n        lastSaved: new Date()\n      })\n      .then((res) => {\n        alert('New list created!')\n        return(res);\n      })\n      .then((res) => {\n        const newId = res.data._id;\n        const a = document.createElement(\"a\");\n        a.href = `https://wmxgroup.github.io/react-sandbox-1/?query=${newId}`;\n        a.click();\n      });\n    } else {\n      axios\n      .post(`https://guarded-mesa-76047.herokuapp.com/api/lists/update/${listId}`, {\n        list: this.state.options,\n        listName: this.state.listName,\n        lastSaved: currentDT\n      })\n      .then(() => {\n        this.setState({\n          lastSaved: currentDT\n        })\n        alert('Data saved successfully!')\n      });\n    }\n  }\n\n  getLSData = () => {\n    const retrievedStorage = localStorage.getItem('myTreeData');\n    if(retrievedStorage === null || retrievedStorage === []) {\n      localStorage.setItem('myTreeData', JSON.stringify([\n        {\n            name: \"Start Here\",\n            id: 1,\n            selected: false,\n            subOptions: [],\n            depth: 0\n          }\n        ]));\n    }\n\n    return (JSON.parse(localStorage.getItem('myTreeData')))\n  }\n\n  downloadFile = (content, fileName, contentType) => {\n    const a = document.createElement(\"a\");\n    const file = new Blob([content], { type: contentType });\n    a.href = URL.createObjectURL(file);\n    a.download = fileName;\n    a.click();\n  }\n\n  writeToLS = (newData) => {\n    localStorage.setItem('myTreeData', JSON.stringify(newData));\n  };\n\n  exportJSON = () => {\n    this.handleClose();\n    this.downloadFile(JSON.stringify(this.state.options), \"data.json\", \"text/plain\");\n  }\n\n  getFile = (e) => {\n    this.handleClose();\n    let files = e.target.files;\n    let reader = new FileReader();\n    reader.readAsText(files[0]);\n\n    reader.onload = e => {\n      localStorage.setItem('myTreeData', e.target.result);\n      this.setState({\n        options: JSON.parse(e.target.result)\n      })\n    };\n  }\n\n  createNew = () => {\n    this.handleClose();\n    const newData = \n    [{\n      name: \"Start Here\",\n      id: 1,\n      selected: false,\n      subOptions: [],\n      depth: 0\n    }];\n\n    axios\n    .post(`https://guarded-mesa-76047.herokuapp.com/api/lists/new`, {\n      list: newData,\n      listName: this.state.listName,\n      lastSaved: new Date()\n    })\n    .then((res) => {\n      alert('New list created!')\n      return(res);\n    })\n    .then((res) => {\n      const newId = res.data._id;\n\n      const a = document.createElement(\"a\");\n      a.href = `https://wmxgroup.github.io/react-sandbox-1/?query=${newId}`;\n      a.click();\n    });\n  }\n\n  createBaseNode = () => {\n    this.handleClose();\n    const newData = \n    [{\n      name: \"Start Here\",\n      id: 1,\n      selected: false,\n      subOptions: [],\n      depth: 0,\n      // count: 0\n    }];\n\n    this.setState({\n      options: newData,\n    });\n  }\n\n  handleMenu = event => {\n    this.setState({\n      anchorEl: event.currentTarget,\n      setAnchorEl: true\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      setAnchorEl: false\n    });\n  };\n\n  handleTitleChange = (e) => {\n    this.setState({\n      listName: e.target.value\n    })\n  }\n\n  render() {\n\n    // if(this.state.isLoading === false){\n    //   this.writeToLS(this.state.options);\n    // }\n\n     return (\n       <React.Fragment>\n        <AppBar \n          position=\"fixed\" \n          color=\"primary\">\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                onClick={this.handleMenu}\n                >\n                <MenuIcon />\n              </IconButton>\n              <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={this.state.anchorEl}\n                  getContentAnchorEl={null}\n                  anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                  }}\n                  keepMounted\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                  }}\n                  open={this.state.setAnchorEl}\n                  onClose={this.handleClose}\n                >\n                  <input \n                    type=\"file\"\n                    style={{ display: 'none' }}\n                    id=\"raised-button-file\"\n                    name=\"file\" \n                    onChange={this.getFile}\n                    accept=\".json\"\n                    />\n                  <label htmlFor=\"raised-button-file\">\n                    <MenuItem onClick={() => this.getFile()}>Import JSON</MenuItem>\n                  </label>\n                  <MenuItem onClick={() => this.exportJSON()}>Export Data</MenuItem>\n                  <MenuItem onClick={() => this.saveData()}>Save Data</MenuItem>\n                  <MenuItem onClick={() => this.createNew()}>Create New</MenuItem>\n                </Menu>\n              <Typography variant=\"h6\">\n                  Outliner\n              </Typography>\n              <div style={{flexGrow: 1}} />\n              <IconButton color=\"inherit\">\n                <SearchIcon />\n              </IconButton>\n              <IconButton edge=\"end\" color=\"inherit\">\n                <MoreIcon />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          <Toolbar />\n            {/* <Button\n              style={{\n                padding: '8px',\n                margin: '3px',\n                textAlign: 'center',\n              }}\n              variant=\"contained\"\n              onClick={() => this.exportJSON()}\n              color=\"primary\"\n              >Export Data\n            </Button> */}\n          <div\n            style={{\n              fontStyle:'italic',\n              color:'#bbb',\n            }}>\n              {this.state.lastSaved === null ? 'Not Saved' : 'Last Saved: ' + this.state.lastSaved}\n          </div>\n          <TextField\n          InputProps={{\n            disableUnderline: true,\n            style: {\n              display: 'block',\n              fontSize: '2em',\n              marginTop: '0.3em',\n              marginBottom: '0.3em',\n              // padding: 0\n            }\n          }}\n          value={this.state.listName}\n          onChange={this.handleTitleChange}\n        />\n          <div style={styles.treeContainer}>\n            <OptionList \n                options={this.state.options}\n                textChange={(options) => this.setState({options})}\n              />\n          </div>\n        </React.Fragment>\n     )\n  }\n}\n\nexport default TreeView;","import React, { Component } from 'react';\nimport TreeView from './components/TreeView';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from \"@material-ui/core\";\nimport { blue } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue\n  },\n  typography: {\n\n  },\n  overrides: {\n    MuiBadge: {\n      badge: {\n        height: 13,\n        minWidth: 13,\n        padding: 0,\n        \n      },\n      colorPrimary: {\n        backgroundColor: 'Navy'\n      }\n    },\n  },\n});\n\nclass App extends Component {\n\n  state = { count: 0 }\n\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n          <TreeView />\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}