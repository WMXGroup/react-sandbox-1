{"version":3,"sources":["components/TextNode.js","components/OptionList.js","components/TreeView.js","App.js","index.js"],"names":["TextNode","this","props","isMaxNew","myRef","current","focus","_this$props","classes","selected","label","onChange","handleTextChange","handleAddSub","handleDelete","handleReturn","nodeCount","react_default","a","createElement","className","nodeContainer","Badge","badgeContent","color","anchorOrigin","vertical","horizontal","Checkbox","checked","checkbox","size","TextField","nodeText","InputProps","disableUnderline","style","padding","value","onKeyPress","inputRef","multiline","IconButton","onClick","AddCircle_default","addButton","HighlightOff_default","deleteButton","React","Component","withStyles","theme","optionList","margin","borderLeft","display","width","borderBottom","fontSize","justifyContent","alignItems","height","OptionList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isLastNew","textInput","_this2","options","textChange","i","length","push","createRef","handleSubOptionsTextChange","optionName","subOptions","uuidv4","Math","random","toString","substring","Date","now","handleAdd","index","newOption","name","id","depth","splice","getNodeCount","optionId","optionCount","Fragment","map","option","paddingLeft","components_TextNode","handleCheckboxClicked","event","newValue","handleChange","target","newSubOption","e","key","preventDefault","undefined","setState","styles","buttonContainer","buttonStyle","textAlign","TreeView","selectedFile","isLoading","componentDidMount","getServerData","search","window","location","listId","URLSearchParams","get","axios","concat","then","res","data","list","saveData","post","alert","getLSData","retrievedStorage","localStorage","getItem","setItem","JSON","stringify","parse","downloadFile","content","fileName","contentType","document","file","Blob","type","href","URL","createObjectURL","download","click","writeToLS","newData","exportJSON","getFile","files","reader","FileReader","readAsText","onload","result","createNew","newId","_id","createBaseNode","accept","htmlFor","Button","variant","component","components_OptionList","createMuiTheme","palette","primary","blue","typography","overrides","MuiBadge","badge","minWidth","colorPrimary","backgroundColor","App","count","ThemeProvider","components_TreeView","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.cf69b4d2.chunk.js","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = (theme) => ({\r\n  optionList:{\r\n    margin: 0,\r\n  },\r\n  nodeContainer:{\r\n    borderLeft: '1px solid #ccc',\r\n    display:'flex',\r\n    \r\n  },\r\n  nodeText:{\r\n    // border: 'none',\r\n    width:'500px',\r\n    borderBottom: '1px dashed #ccc'\r\n  },\r\n  addButton:{\r\n    fontSize: '17px',\r\n    color: 'green'\r\n  },\r\n  deleteButton:{\r\n    fontSize: '17px',\r\n    color: 'red',\r\n  },\r\n  nodeCount:{\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  checkbox:{\r\n    height: 0,\r\n    width: '5px'\r\n  },\r\n});\r\n\r\nclass TextNode extends React.Component {\r\n  componentDidMount(){\r\n    if(this.props.isMaxNew === true){\r\n      this.props.myRef.current.focus()\r\n    }\r\n  }\r\n  render(){\r\n    const {\r\n      classes,    \r\n      selected, \r\n      label, \r\n      onChange, \r\n      handleTextChange,\r\n      handleAddSub, \r\n      handleDelete,\r\n      handleReturn,\r\n      nodeCount,\r\n      myRef\r\n    } = this.props;\r\n    return(\r\n      <div className={classes.nodeContainer}>\r\n        <Badge\r\n          badgeContent={nodeCount}\r\n          color='primary'\r\n          anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n          }}\r\n          >\r\n          <Checkbox\r\n            checked={selected}\r\n            className={classes.checkbox}\r\n            onChange={onChange}\r\n            color=\"primary\"\r\n            size='small'\r\n          />\r\n        </Badge>\r\n        <TextField\r\n          className={classes.nodeText}\r\n          InputProps={{\r\n            disableUnderline: true,\r\n            style: {\r\n              padding: 0,\r\n            }\r\n          }}\r\n          value={label}\r\n          onChange={handleTextChange}\r\n          onKeyPress={handleReturn}\r\n          inputRef={myRef}\r\n          multiline\r\n        />\r\n        <IconButton\r\n          onClick={handleAddSub}\r\n          size='small'\r\n        >\r\n          <AddCircleIcon\r\n            className={classes.addButton}\r\n          />\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleDelete} \r\n          size='small'\r\n        >\r\n          <HighlightOffIcon\r\n            className={classes.deleteButton}\r\n          />\r\n        </IconButton>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TextNode)","import React from 'react';\r\nimport TextNode from './TextNode';\r\n\r\nclass OptionList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.textInput = []\r\n  }\r\n\r\n  state = {\r\n    isLastNew : false,\r\n  }\r\n\r\n  render(){\r\n    const { options, textChange } = this.props;\r\n\r\n    this.textInput = [];\r\n\r\n    for(let i=0; i<options.length; i++){\r\n      this.textInput.push(React.createRef());\r\n    }\r\n    const handleCheckboxClicked = (optionId) => {\r\n      for(let i=0;i<options.length;i++){\r\n        if(options[i].id === optionId){\r\n          options[i].selected = !options[i].selected\r\n        }\r\n      }\r\n      textChange(options);\r\n    }\r\n    \r\n    const handleChange = (newValue, optionId) => {\r\n      for(let i=0;i<options.length;i++){\r\n        if(options[i].id === optionId){\r\n          options[i].name = newValue\r\n        }\r\n      }\r\n      textChange(options);\r\n    }\r\n  \r\n    const handleSubOptionsTextChange = (optionName, subOptions) => {\r\n      options[optionName] = subOptions\r\n      textChange(options);\r\n    }\r\n\r\n    const uuidv4 = () => {\r\n      return Math.random().toString(36).substring(2) + Date.now().toString(36);\r\n    }\r\n  \r\n    const handleAdd = (index) => {\r\n      const newOption = {\r\n        name:\"\",\r\n        id: uuidv4(),\r\n        subOptions: [],\r\n        depth: options[index].depth\r\n      }\r\n      options.splice(index+1, 0, newOption )\r\n      textChange(options)\r\n    }\r\n  \r\n    const handleAddSub = (optionId) => {\r\n      const newSubOption = {\r\n        name:\"\",\r\n        id: uuidv4(),\r\n        subOptions: [],\r\n      }\r\n      for(let i=0;i<options.length;i++){\r\n        if(options[i].id === optionId){\r\n          newSubOption.depth = options[i].depth + 1\r\n          options[i].subOptions.push(newSubOption)\r\n          options[i].selected = true\r\n        }\r\n      }\r\n      textChange(options)\r\n    }\r\n  \r\n    const handleDelete = (optionId) => {\r\n      for(let i=0;i<options.length;i++){\r\n        if(options[i].id === optionId){\r\n          options.splice(i, 1)\r\n        }\r\n      }\r\n      textChange(options)\r\n    }\r\n  \r\n    const handleReturn = (e, index) => {\r\n      if(e.key === 'Enter'){\r\n        e.preventDefault()\r\n        handleAdd(index);\r\n      if(this.textInput[index+1] !== undefined){\r\n        this.setState({\r\n          isLastNew: false\r\n        })\r\n        this.textInput[index+1].current.focus()\r\n      } else{\r\n        this.setState({\r\n          isLastNew: true\r\n        })\r\n      }\r\n      }\r\n    }\r\n\r\n    const getNodeCount = (optionId) => {\r\n      let optionCount = 0;\r\n      for(let i=0;i<options.length;i++){\r\n        if(options[i].id === optionId){\r\n          optionCount = options[i].subOptions.length\r\n        }\r\n      }\r\n      return optionCount;\r\n    }\r\n\r\n    return(\r\n      <React.Fragment>\r\n      {options.map((option, index) => {\r\n        return (\r\n        <ul style={{\r\n          margin: 0,\r\n          paddingLeft: option.depth === 0 ? 0 : '20px',\r\n          borderLeft: option.depth === 0 ?'none': '1px #ccc solid'\r\n        }}>\r\n          <TextNode\r\n            selected={option.selected} \r\n            label={option.name} \r\n            onChange={() => handleCheckboxClicked(option.id)}\r\n            handleTextChange={(event) => handleChange(event.target.value, option.id)}\r\n            handleAdd={() => handleAdd(index)}\r\n            handleAddSub={() => handleAddSub(option.id)}\r\n            handleDelete={() => handleDelete(option.id)}\r\n            handleReturn={(e) => handleReturn(e, index)}\r\n            myRef={this.textInput[index]}\r\n            isMaxNew={this.state.isLastNew}\r\n            nodeCount={getNodeCount(option.id)}\r\n           />\r\n          {/* Base Case */}\r\n          {(option.subOptions.length > 0 && option.selected === true) &&\r\n            <OptionList\r\n              options={option.subOptions}\r\n              textChange={(subOptions) => handleSubOptionsTextChange(option.name, subOptions)}\r\n             />\r\n          }\r\n        </ul>\r\n      )}\r\n      )}\r\n    </React.Fragment>\r\n  )\r\n  }\r\n}\r\n\r\nexport default OptionList;","import React from 'react';\nimport OptionList from './OptionList';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\n\nconst styles = {\n  buttonContainer:{\n    display: 'flex',\n  },\n  buttonStyle: {\n    padding: '8px',\n    margin: '3px',\n    textAlign: 'center',\n  }\n}\n\nclass TreeView extends React.Component {    \n  state = {\n    options: [],\n    selectedFile: null,\n    isLoading: true\n  }\n\n  componentDidMount = () => {\n    this.getServerData();\n    // const treeData = this.getLSData();\n    \n    // this.setState({\n    //   options: treeData,\n    //   isLoading: false\n    // })\n  }\n\n  getServerData = () => {\n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    let listId = params.get('query');\n\n    if(listId !== undefined && listId !== null){\n      axios\n      .get(`https://guarded-mesa-76047.herokuapp.com/api/lists/${listId}`)\n      .then(res => this.setState({ \n        options: res.data.list\n        \n      }));\n    }\n  }\n\n  saveData = () => {\n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    let listId = params.get('query');\n\n    axios\n    .post(`https://guarded-mesa-76047.herokuapp.com/api/lists/update/${listId}`, {\n      list: this.state.options\n    })\n    .then(() => {\n      alert('Data saved successfully!')\n    });\n  }\n\n  getLSData = () => {\n    const retrievedStorage = localStorage.getItem('myTreeData');\n    if(retrievedStorage === null || retrievedStorage === []) {\n      localStorage.setItem('myTreeData', JSON.stringify([\n        {\n            name: \"Start Here\",\n            id: 1,\n            selected: false,\n            subOptions: [],\n            depth: 0\n          }\n        ]));\n    }\n\n    return (JSON.parse(localStorage.getItem('myTreeData')))\n  }\n\n  downloadFile = (content, fileName, contentType) => {\n    const a = document.createElement(\"a\");\n    const file = new Blob([content], { type: contentType });\n    a.href = URL.createObjectURL(file);\n    a.download = fileName;\n    a.click();\n  }\n\n  writeToLS = (newData) => {\n    localStorage.setItem('myTreeData', JSON.stringify(newData));\n  };\n\n  exportJSON = () => {\n    this.downloadFile(JSON.stringify(this.state.options), \"data.json\", \"text/plain\");\n  }\n\n  getFile = (e) => {\n    let files = e.target.files;\n    let reader = new FileReader();\n    reader.readAsText(files[0]);\n\n    reader.onload = e => {\n      localStorage.setItem('myTreeData', e.target.result);\n      this.setState({\n        options: JSON.parse(e.target.result)\n      })\n    };\n  }\n\n  createNew = () => {\n    const newData = \n    [{\n      name: \"Start Here\",\n      id: 1,\n      selected: false,\n      subOptions: [],\n      depth: 0\n    }];\n\n    axios\n    .post(`https://guarded-mesa-76047.herokuapp.com/api/lists/new`, {\n      list: newData\n    })\n    .then((res) => {\n      alert('New list created!')\n      return(res);\n    })\n    .then((res) => {\n      const newId = res.data._id;\n\n      const a = document.createElement(\"a\");\n      a.href = `https://wmxgroup.github.io/react-sandbox-1/?query=${newId}`;\n      a.click();\n    });\n  }\n\n  createBaseNode = () => {\n    const newData = \n    [{\n      name: \"Start Here\",\n      id: 1,\n      selected: false,\n      subOptions: [],\n      depth: 0\n    }];\n\n    this.setState({\n      options: newData\n    });\n  }\n\n  render() {\n\n    // if(this.state.isLoading === false){\n    //   this.writeToLS(this.state.options);\n    // }\n\n     return (\n       <div>\n         <div style={styles.buttonContainer}>\n          <input \n            type=\"file\"\n            style={{ display: 'none' }}\n            id=\"raised-button-file\"\n            name=\"file\" \n            onChange={this.getFile}\n            accept=\".json\"\n            />\n            <label htmlFor=\"raised-button-file\">\n              <Button \n                style={styles.buttonStyle}\n                variant=\"contained\"\n                color=\"primary\"\n                component=\"span\">\n                Import JSON\n              </Button>\n            </label>\n          <Button\n            style={styles.buttonStyle}\n            variant=\"contained\"\n            onClick={() => this.exportJSON()}\n            color=\"primary\"\n            >Export Data\n          </Button>\n          <Button\n            style={styles.buttonStyle}\n            variant=\"contained\"\n            onClick={() => this.saveData()}\n            color=\"primary\"\n            >Save Data\n          </Button>\n          <Button\n            style={styles.buttonStyle}\n            variant=\"contained\"\n            onClick={() => this.createNew()}\n            color=\"primary\"\n            >Create New\n          </Button>\n         </div>\n         {this.state.options.length === 0 &&\n         <div>\n           <Button\n            style={styles.buttonStyle}\n            variant=\"contained\"\n            onClick={() => this.createBaseNode()}\n            color=\"primary\"\n            >Add Base Node\n           </Button>\n         </div>\n        }\n         <h1>My Tree</h1>\n          <OptionList \n            options={this.state.options}\n            textChange={(options) => this.setState({options})}\n          />\n       </div>\n     )\n  }\n}\n\nexport default TreeView;","import React, { Component } from 'react';\nimport TreeView from './components/TreeView';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from \"@material-ui/core\";\nimport { blue } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue\n  },\n  typography: {\n\n  },\n  overrides: {\n    MuiBadge: {\n      badge: {\n        height: 13,\n        minWidth: 13,\n        padding: 0,\n        \n      },\n      colorPrimary: {\n        backgroundColor: 'Navy'\n      }\n    },\n  },\n});\n\nclass App extends Component {\n\n  state = { count: 0 }\n\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n          <TreeView />\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}